<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.tyndalehouse.step</groupId>
		<artifactId>step-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../step-parent/pom.xml</relativePath>
	</parent>

	<groupId>com.tyndalehouse.step</groupId>
	<artifactId>step-core</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>STEP :: Step Core functionality</name>

	<build>
		<plugins>
			<plugin>  
				<groupId>org.apache.maven.plugins</groupId>  
				<artifactId>maven-antrun-plugin</artifactId>  
				<executions>  
					<execution>  
						<id>generating-ebean-classes</id>  
						<phase>compile</phase>  
						<configuration>  
							<tasks>  
								<property name="compile_classpath" refid="maven.compile.classpath" />  
								<echo message="Ebean enhancing test classes debug level -----------------------------------" />  
								<echo message="Classpath: ${compile_classpath}" />  
								<taskdef name="ebeanEnhance"  
									classname="com.avaje.ebean.enhance.ant.AntEnhanceTask"  
									classpath="${compile_classpath}" />  
								<ebeanEnhance 
									classSource="${project.build.outputDirectory}"  
									packages="com.tyndalehouse.step.core.data.entities.**" />  
							</tasks>  
							<encoding>UTF-8</encoding>  
						</configuration>  
						<goals>  
							<goal>run</goal>  
						</goals>
					</execution>  
				</executions>  
			</plugin>  
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-surefire-plugin</artifactId>
		        <executions>
		        	<execution>
				        <configuration>
				          <includes>
				            <include>**/*PreReq.java</include>
				          </includes>
				        </configuration>
				        <phase>process-test-classes</phase>
				        <goals>
				        	<goal>test</goal>
				        </goals>
		        	</execution>
		        </executions>
			</plugin>
		</plugins>
	</build>


	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.crosswire</groupId>
			<artifactId>jsword</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
		</dependency>
				
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>commons-codec</groupId>-->
<!--			<artifactId>commons-codec</artifactId>-->
<!--		</dependency>-->
		
		<!--  we don't always need this - depends on what version -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.jolira</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
		</dependency>

		<dependency>
		    <groupId>org.avaje</groupId>
		    <artifactId>ebean</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<type>pom</type>
		</dependency>
		
		<dependency>
		    <groupId>joda-time</groupId>
		    <artifactId>joda-time</artifactId>
		</dependency>
		
		
		<!-- transitive dependencies not picked up by jsword -->
		<dependency>
			<groupId>javatar</groupId>
			<artifactId>javatar</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient </artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
